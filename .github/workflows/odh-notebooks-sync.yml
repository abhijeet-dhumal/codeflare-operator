name: Sync with Codeflare-SDK Release
on:
  workflow_dispatch:
    inputs:
      codeflare_sdk_release_version:
        required: true
        description: "Provide the version of the Codeflare release you want to update to"
        
env:
  BRANCH_NAME: main
  CODEFLARE_RELEASE_VERSION: ${{ github.event.inputs.codeflare_sdk_release_version }}
  UPDATER_BRANCH: odh-sync-updater-${{ github.run_id }}
  REPO_OWNER: abhijeet-dhumal
  REPO_NAME: notebooks
  GITHUB_TOKEN: ${{ secrets.TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:          
          ref: ${{ env.BRANCH_NAME }}

      - name: Clone repository
        id: Clone
        run: |
          REPO_FULL_NAME=$REPO_OWNER/$REPO_NAME
          # Clone the forked repository
          git clone https://github.com/abhijeet-dhumal/notebooks.git notebooks
          cd notebooks

      - name: Create a new branch
        run: |
          echo ${{ env.UPDATER_BRANCH }}
          git checkout -b ${{ env.UPDATER_BRANCH }}
          git push --set-upstream origin ${{ env.UPDATER_BRANCH }}:${{ env.UPDATER_BRANCH }}

      - name: Set up Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
      
      # Setup Python environment
      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: |
            3.8
            3.9
            
      - name: Install pipenv
        run: pip install pipenv

      - name: Update Pipfiles in accordance with Codeflare-SDK latest release
        run: |
          # list all Pipfile paths having Codeflare-SDK listed
          paths+=($(grep -rl 'codeflare-sdk = "~=.*"'))
          # Extracting only directories from file paths, excluding a `.gitworkflow` directory
          directories=()
          exclude_directories=(
            ".git/objects/pack"
            ".github/workflows/",
          )
          for path in "${paths[@]}"; do
            current_dir=$(dirname "$path")
            #Check if current_dir is not in exclude_directories list
            if [[ ! "${exclude_directories[@]}" =~ "$current_dir" ]]; then
              #Check if Pipfile exists in current_dir
              if [ -f "$current_dir/Pipfile" ];then
                directories+=("$current_dir")
              fi
            fi
          done
          # Remove duplicates
          directories=($(echo "${directories[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' '))
          # Print the directories for verification
          echo "Directories (Start updating Pipfile in these below directories in accordance with Codeflare-SDK latest release):"
          for dir in "${directories[@]}"; do
            echo "- $dir"
          done
          # iterate over the directories and update Pipfile
          # for dir in "${directories[@]}"; do
          dir=notebooks/jupyter/datascience/ubi8-python-3.8
          cd "$dir"
          pipenv install codeflare-sdk~="${CODEFLARE_RELEASE_VERSION}"
          pipenv --rm
          cd -
          # done

      - name: Push changes to forked repository
        run: |
          cd notebooks &&
          git commit -am "Updated Codeflare-SDK via ${{ env.UPDATER_BRANCH }} GitHub action"  &&
          git status
          git remote -v
          git push origin ${{ env.UPDATER_BRANCH }}

      - name: Create Pull Request
        run: |
          gh pr create --repo abhijeet-dhumal/notebooks \
            --title "$pr_title" \
            --body "$pr_body" \
            --label "$pr_label" \
            --head $REPO_OWNER:$UPDATER_BRANCH \
            --base $BRANCH_NAME 
        env:
          pr_label: "automated pr"
          pr_title: "Update notebook's pipfile to sync with Codeflare-SDK release"
          pr_body: |
            :rocket: This is an automated Pull Request.
            This PR updates the `Pipfile` to sync with latest Codeflare-SDK release.
            Created by `/.github/workflows/codeflare-sdk-release-sync.yaml`
            :exclamation: **IMPORTANT NOTE**: Remember to delete the ` ${{ env.UPDATER_BRANCH }}` branch after merging the changes

